name: database-restore

on: workflow_dispatch
    
jobs:
  restore:
    runs-on: ubuntu-latest
    environment: Prod
    env:
      supabase_db_url: ${{ secrets.SUPABASE_DB_URL }}
      database_restore_date: ${{ vars.DATABASE_RESTORE_DATE }} 
    steps:
      - name: Regex for DATABASE_RESTORE_DATE env var format
        uses: actions-ecosystem/action-regex-match@v2
        id: regex-match
        with:
          text: ${{ env.database_restore_date }}
          regex: '^\d{4}-\d{2}-\d{2}$'
      - name: Check if DATABASE_RESTORE_DATE env has good format
        if: ${{ steps.regex-match.outputs.match == '' }}
        run: |
          echo "::error file={name},line={line},endLine={endLine},title={title}::DATABASE_RESTORE_DATE env var format has to be YYYY-MM-DD"
          exit 1
      - name: Fetch backup.zip from S3 - ${{ env.database_restore_date }}
        uses: keithweaver/aws-s3-github-action@v1.0.0
        with:
          command: cp
          source: "s3://supabase/default/backups/${{ env.database_restore_date }}/backup.zip"
          destination: ./backup.zip
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: us-east-1
          flags: ${{ vars.S3_ACTION_FLAGS }}
      - name: Unzip backup.zip
        uses: montudor/action-zip@v1
        with:
          args: unzip -qq backup.zip -d dir
      - name: Activate postgresql
        run: sudo systemctl start postgresql.service

      # - name: Restore database
      #   run: psql -c "DROP SCHEMA IF EXISTS public CASCADE; CREATE SCHEMA public;"--file roles.sql --file schema.sql --command 'SET session_replication_role = replica' --file data.sql --dbname "$supabase_db_url"